Медиатор.
Ну про медиатор ничего толком не сказать, как я понимаю тот же Presenter выполняет ту же самую роль медиатора, только в UI, а сам паттерн можно выполнять и с любыми другими сущностями, для лучшего их разделения, что даст лучшую читабельность и тестирование. 

Фабрика.
Ну фабрика все понятно, создает сущности по нужным нам критериям. Причем как очевидно, типо проверяем какой ресурс самый дешевый (нефть, газ, уран и тд.) и строим соотвествующую электростанцию, так и менее, к примеру можно в зависимости от местности фабрика будет выпускать нужный звук с нужным фильтром. Если в пещере, что с реверберацией и хорусом, если на поляне, то без. 

Визитер.
Ну мне кажется этот паттерн крайне узкого применения и какой то новый способ я не придумаю, кроме как вы представили. Преимущество, что можно не трогать основной код класс, а "пройти рядом". 

Декоратор.
Вот тут у меня проблемы. Я понимаю как он работает, но может у меня не очень развито воображение, но я не представляю как его использовать. Даже наш пример с классом и расой кажется не очень хорошим, в силу, что мы теперь не можем узнать конкретный класс персонажа, его расу. Только если не писать в интерфейсе метод Object GetClassification(); Получать все Object-ы от всех оберток и каждый пытаться даункастить к Class или Race. (Сразу оговорюсь, что не пробовал, может так вообще нельзя, но вроде же у нас все наследники от Object?) А если у нас возможность смены класса есть? Использовать как в примере со здоровьем и броней, да, можно так же обернуть любое действие если нужен какой то дополнительный эффект поверх того, что есть, и что касается музыки и что касается дополнительных эффектов. Т.е. все сиюминутное не требующее расложения на слои в будущем. Сейчас пришло в голову еще вариант, в интерфейсе написать ClassNames GetClass(); и в enum добавить пункт None, все кто реализуют интерфейс кроме базовой характеристики и непосредственно класса будут переводить на последующего _statProvider (кстати почему так назвали?), а уже если дойдет до класса то он скажет какой он, а если класса нет, то дойдет до базового и тот вернет None, но тут же я понимаю, что все ломается если мы добавляем мультиклассовость.